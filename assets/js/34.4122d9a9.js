(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{376:function(t,s,a){t.exports=a.p+"assets/img/codebuild.192522f2.png"},475:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"aws-codepipeline-codebuild-codedeploy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aws-codepipeline-codebuild-codedeploy"}},[t._v("#")]),t._v(" AWS CodePipeLine + Codebuild, CodeDeploy")]),t._v(" "),s("p",[t._v("AWS의 배포 자동화 3형제 실제 사용해본 경험을 토대로 함으로 저의 한해서 정확합니다(다른 경우는 잘 모르겠습니다)")]),t._v(" "),s("p",[t._v("우선 각각의 역활을 먼저 살펴보고 자세한 동작에 대하여 알아보자.")]),t._v(" "),s("p",[s("code",[t._v("CodePipeline")]),t._v("은 말 그대로의 파이프라인의 역활을 한다.")]),t._v(" "),s("blockquote",[s("p",[t._v("어떠한 트리거나 동작에 의하여 실행되고 앞서 실행된 파일이나 결과를 다음으로 전달하여 동작시킬수 있다.")])]),t._v(" "),s("p",[t._v("이러한 연결 연결을 만들어낼 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("Codebuild")]),t._v("에 경우에는 코드빌더 즉 배포본의 build 역활을 담당한다.")]),t._v(" "),s("blockquote",[s("p",[t._v("흔히알고 있는 yaml 파일의 정의에 의한 CLI명령을 체계적으로 실행하는 Action instance이다.")])]),t._v(" "),s("p",[t._v("이때 Artifact라는 결과물을 받아 저장하고 내보낼수 있는 압축본을 저장하는데 중요한 개념이니 알아보면 좋다.")]),t._v(" "),s("p",[s("code",[t._v("CodeDeploy")]),t._v("에 경우 자세한 배포환경 및 세팅을 할 수 있다.")]),t._v(" "),s("blockquote",[s("p",[t._v("인스턴스를 만들걱나 기존의 인스턴스에 서버를 끄고 다시 생성하고 실행하고 등의 일련의 재배포 및 신규 배포에 있어서 필요한 Action을 저장하여 사용한다.")])]),t._v(" "),s("h2",{attrs:{id:"codepipeline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#codepipeline"}},[t._v("#")]),t._v(" CodePipeLine")]),t._v(" "),s("p",[t._v("코드 파이프라인 부터 살펴보면 Sourece공급자를 통하여 전체 코드소스를 받을수 있는데 대부분의 코드 Manage 프로그램과 연결이 가능하다.")]),t._v(" "),s("p",[t._v("우리 코드는 github2를 통해서 받아낼 예정이다.")]),t._v(" "),s("p",[t._v("github에 경우에는 Plugin을 설치하면서 Repository에 접근 권한을 열어줄 수 있고, 본인의 소스코드가 있는 레포지토리를 선택해주자.")]),t._v(" "),s("p",[t._v("트리거로 동작할 브랜치까지 설정해주고나면 이제 "),s("strong",[t._v("해당 브랜치에 코드가 병합(merge or push)된다면 트리거로서 PipeLine이 실행된다.")])]),t._v(" "),s("p",[t._v("이후에 빌드 공급자를 선택할 수 있고 그 후에 배포공급자를 선택할수 있다.")]),t._v(" "),s("p",[t._v("이 포스트에서는 빌드 공급자는 Codebuild를 배포 공급자는 필요의 경우 CodeDeploy를 사용한다.")]),t._v(" "),s("h2",{attrs:{id:"codebuild"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#codebuild"}},[t._v("#")]),t._v(" CodeBuild")]),t._v(" "),s("p",[t._v("코드빌드의 경우에는 기본적으로 빌드환경을 조성해줘야하는데")]),t._v(" "),s("p",[t._v("본인에게 익숙한 환경을 선택해 주면된다. 본 포스팅은 다음과 같은 환경을 따른다.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(376),alt:"코드빌드"}})]),t._v(" "),s("p",[t._v("이렇게 본인의 편한 환경을 조성하고 "),s("code",[t._v("빌드스펙")]),t._v(" 파일을 생성하여 브랜치에 함께 푸시하거나 직접 명령을 삽입하면 된다.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Buildspec.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("phases")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules/**/*"')]),t._v("\n")])])]),s("p",[t._v("이렇게 빌드 스팩을 만들어주면 모든 파일을 Artifacts로 만들어 다음 파이프라인으로 던져줄수 있다.")]),t._v(" "),s("p",[t._v("Cache를 이용하면 조금더 빠른 빌드를 할 수 있으니 참고하자")]),t._v(" "),s("p",[t._v("로그에 대한 설정은 "),s("code",[t._v("CloudWatch")]),t._v("를 통해 build가 일어났을 때의 instance에서 어떤 일이 일어나는지 직접 로그를 통해 확인할 수 있으니 필요시에 세팅하면 좋다.")]),t._v(" "),s("p",[t._v("서버의 경우에는 위와 같은 빌드 파일을 사용하였고, "),s("code",[t._v("Client")]),t._v("의 경우에는 S3에 정적 배포를 진행하였기에 바로 S3에 빌드본을 업로드하도록 하였는데 이것도 참고하도록 업로드하겠다")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("phases")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - command")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("post_build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ls "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("al\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" aws s3 cp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("recursive build/ s3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("mybucket name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("이런식으로 S3에 Artifacts가 아닌 모든 build 파일을 업로드 하였다. Client는 이렇게하면 배포단계는 S3 Point만 지정해주면 끝나기에 편리하다.")]),t._v(" "),s("p",[t._v("하지만 서버는 Deploy가 필요했다.")]),t._v(" "),s("h2",{attrs:{id:"codedeploy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#codedeploy"}},[t._v("#")]),t._v(" CodeDeploy")]),t._v(" "),s("p",[t._v("요건 배포를 위해 팔요한데 배포의 환경을 만들기 위해 필요하다.")]),t._v(" "),s("p",[t._v("Buildspec을 만들어 동작하는 build와 유사한데 다만 Appspec을 사용하여 instance환경에서 실행한다.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# appspec.yml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("os")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" linux\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /home/ubuntu/build\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hooks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BeforeInstall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /init.sh\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ApplicationStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /start.sh\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n")])])]),s("p",[t._v("files를 통해 인스턴스에 파일을 가져올수 있고,")]),t._v(" "),s("p",[t._v("hooks를 통해 커멘드 스크립트언어를 실행 시킬수 있다.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# init.sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/ubuntu/build"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Rf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/ubuntu/build"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),s("p",[t._v("기존의 있던 빌드파일을 지워줘서 환경을 초기화하고")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start.sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NVM_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/.nvm"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/nvm.sh"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/nvm.sh"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This loads nvm")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/bash_completion"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NVM_DIR")]),t._v('/bash_completion"')]),t._v("\n\npm2 delete all\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" /home/ubuntu/.env.production "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PROJECT_ROOT")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PROJECT_ROOT")]),t._v("\n\npm2 start "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -- run start:prod "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("appname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("나는 node server를 구동하기에 nvm을 불러와주고, pm2로 실행중이던 기존의 instance를 모두 종료해주고 다시 실행하는 것을 작업해주었다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);