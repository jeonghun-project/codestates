(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{510:function(t,a,s){"use strict";s.r(a);var n=s(1),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-javasript-기본"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-javasript-기본"}},[t._v("#")]),t._v(" JS(Javasript) 기본")]),t._v(" "),a("h2",{attrs:{id:"변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변수"}},[t._v("#")]),t._v(" 변수")]),t._v(" "),a("ul",[a("li",[t._v("변수 선언(declaration) → 변수 할당(assignment)")]),t._v(" "),a("li",[t._v("변수 타입(type)\n"),a("ul",[a("li",[t._v("숫자")]),t._v(" "),a("li",[t._v("문자열 → ' ' , \" \"")]),t._v(" "),a("li",[t._v("불리언(Boolean) → true, false")]),t._v(" "),a("li",[t._v("타입이 섞인 (compound) 타입 = 자료형 (배열 array, 객체 object)")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("함수")])])])]),t._v(" "),a("h2",{attrs:{id:"함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수"}},[t._v("#")]),t._v(" 함수")]),t._v(" "),a("p",[t._v("코드의 묶음 기능의 단위")]),t._v(" "),a("p",[t._v("입력값과 출력값을 가짐(mapping)")]),t._v(" "),a("p",[t._v("함수 선언(declaration) → 함수 호출(Call, invocation) → return")]),t._v(" "),a("p",[t._v("함수의 표현 방법 ⇒ 함수이름(전달인자(argument))")]),t._v(" "),a("p",[t._v("func( param1, .... , paramN ) → return")]),t._v(" "),a("h3",{attrs:{id:"함수의-표현-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수의-표현-방법"}},[t._v("#")]),t._v(" 함수의 표현 방법")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("함수 선언식")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//컴퓨터에게 시킬 일")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("함수 표현식")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myFunction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//컴퓨터에게 시킬 일")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("함수 선언식과 표현식의 가장 큰 차이는 호이스팅에 있다.\n함수 선언식은 함수에 호이스팅이 일어나기 때문에 함수를 선언하는 시기에 대한 고민이 없지만, 무분별한 사용으로 코드의 복잡성이 늘어날 수있는 위험이 있다.")])])}),[],!1,null,null,null);a.default=r.exports}}]);