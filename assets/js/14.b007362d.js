(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{330:function(t,a,s){t.exports=s.p+"assets/img/image-31.e80a0e63.png"},331:function(t,a,s){t.exports=s.p+"assets/img/image-32.c53e40ba.png"},332:function(t,a,s){t.exports=s.p+"assets/img/image-33.df3f2bfe.png"},333:function(t,a,s){t.exports=s.p+"assets/img/image-34.765b5826.png"},334:function(t,a,s){t.exports=s.p+"assets/img/image-35.3d585379.png"},335:function(t,a,s){t.exports=s.p+"assets/img/image-36.6e3d7a0a.png"},471:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"트리-모델"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#트리-모델"}},[t._v("#")]),t._v(" 트리 모델")]),t._v(" "),a("h2",{attrs:{id:"bagging-boosting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bagging-boosting"}},[t._v("#")]),t._v(" Bagging & Boosting")]),t._v(" "),a("p",[t._v("Random forest = Bagging")]),t._v(" "),a("p",[t._v("디시전 트리를 여러개 이용하여 모델을 만드는 방법")]),t._v(" "),a("p",[t._v("둘에 차이는 train 데이터를 어떻게 다루는지에 대한 차이가 있다.")]),t._v(" "),a("h3",{attrs:{id:"bagging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bagging"}},[t._v("#")]),t._v(" Bagging")]),t._v(" "),a("p",[a("img",{attrs:{src:s(330),alt:"ats"}})]),t._v(" "),a("p",[t._v("Bagging = Booststrap + Aggregation")]),t._v(" "),a("p",[t._v("Booststrap:")]),t._v(" "),a("ul",[a("li",[t._v("Decision Tree")])]),t._v(" "),a("p",[t._v("20고개를 한다고 생각하면 좋다")]),t._v(" "),a("p",[t._v("기준에 따라서 모델을 구분하는 모델")]),t._v(" "),a("ul",[a("li",[t._v("Bagging")])]),t._v(" "),a("p",[t._v("병렬 모델 / 다양한 Tree 생성")]),t._v(" "),a("p",[a("img",{attrs:{src:s(331),alt:"alt text"}})]),t._v(" "),a("p",[t._v("흰색은 무시")]),t._v(" "),a("p",[t._v("잘 맞추지 못한 데이터에 웨잇을 부여하여")]),t._v(" "),a("p",[t._v("다음 트리에 영향을 준다")]),t._v(" "),a("h3",{attrs:{id:"boosting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boosting"}},[t._v("#")]),t._v(" Boosting")]),t._v(" "),a("p",[t._v("순차적 모델 / 정밀한 Tree 생성")]),t._v(" "),a("blockquote",[a("p",[t._v("LightGBM / XGBoost / CatBoost")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(332),alt:"alt text"}})]),t._v(" "),a("p",[t._v("트리가 성장하는 모습을 제안하여 한쪽으로 더욱 성장하도록 하는 방법이 있고 없고에 차이")]),t._v(" "),a("h3",{attrs:{id:"hyper-parameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyper-parameter"}},[t._v("#")]),t._v(" Hyper-parameter")]),t._v(" "),a("p",[t._v("사용하는 feature를 랜덤하게 선택하여 데이터가 오버피팅 되는것을 방지한다")]),t._v(" "),a("p",[a("img",{attrs:{src:s(333),alt:"alt text"}})]),t._v(" "),a("p",[t._v("이를 row를 기준으로 할 수 도 있다")]),t._v(" "),a("p",[a("img",{attrs:{src:s(334),alt:"alt text"}})]),t._v(" "),a("p",[t._v("이렇게 셈플링을 진행하여 새로운 트리를 연속하여 만들 수 있다.")]),t._v(" "),a("p",[t._v("각종 파라미터를 조절할 수 있다.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(335),alt:"alt text"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);