(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{598:function(t,n,e){"use strict";e.r(n);var s=e(1),a=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"react-rifecycle"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-rifecycle"}},[t._v("#")]),t._v(" React RifeCycle")]),t._v(" "),n("p",[t._v("리액트의 핵심개념중 하나인 라이프사이클에 대하여 알아보자.")]),t._v(" "),n("p",[t._v("리액트는 라이프사이클을 가지고 있다.")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("라이프 싸이클 알아보기"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("어떠한 메소드들이 리엑트의 상태를 읽어들이고 관리하게 되는지에 대한 관계도라고 보면된다.")]),t._v(" "),n("p",[t._v("리엑트는 기본적으로 state를 유지하는 각각의 component에서 state의 변경사항이 생겼을때 해당 변경사항이 있는 component만을 가상 돔을통해 재랜더링하기에 모든 페이지를 다시 로드하는 방식으로 작동한다.")]),t._v(" "),n("p",[t._v("그렇기에 이런 리엑트를 제대로 알고 사용하기 위해서는 라이프 싸이클을 잘 알아야한다.")]),t._v(" "),n("p",[t._v("주의)기본적으로 class component를 베이스로 설명한다\nhook은 따로 정리하도록 하겠다.")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%EC%83%9D%EC%84%B1-%EB%90%A0-%EB%95%8C"}},[t._v("생성 될 때")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%ED%95%A0-%EB%95%8C"}},[t._v("업데이트 할 때")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#%EC%A0%9C%EA%B1%B0-%ED%95%A0-%EB%95%8C"}},[t._v("제거 할 때")])])]),t._v(" "),n("h2",{attrs:{id:"생성-될-때"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#생성-될-때"}},[t._v("#")]),t._v(" 생성 될 때")]),t._v(" "),n("p",[t._v("constructor() -> render() -> componentDidMount()")]),t._v(" "),n("p",[t._v("컨스트럭터에서 props와 최초의 state, event들을 읽어내고\nrender를 통하여 JSX을 HTML로 그려낸다.")]),t._v(" "),n("p",[n("code",[t._v("componentDidMount()")]),t._v("는 모든 돔이만들어지고 화면에 대한 render()를 끝마친 뒤에 일어난다.")]),t._v(" "),n("p",[t._v("componentDidMount()는 component가 생성될 때 한 번 실행 되는 것이다.")]),t._v(" "),n("h2",{attrs:{id:"업데이트-할-때"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#업데이트-할-때"}},[t._v("#")]),t._v(" 업데이트 할 때")]),t._v(" "),n("p",[t._v("업데이트가 발생하는 경우는 세 가지로 나뉜다.")]),t._v(" "),n("p",[n("code",[t._v("new props")]),t._v("가 주어질 때")]),t._v(" "),n("p",[n("code",[t._v("setState")]),t._v("를 통해 "),n("code",[t._v("State")]),t._v("가 변경될 때")]),t._v(" "),n("p",[n("code",[t._v("force­Update()")]),t._v("를 통하여 "),n("code",[t._v("render()")]),t._v("를 실행하였을 때")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("현재 상속받고 있는 props가 상위 컴포넌트에서 변경되어 주어지면 render를 다시 실행한다.")])]),t._v(" "),n("li",[n("p",[t._v("현재 component의 state가 변경될 때도 변경된 state를 이용하여 렌더링을 해준다.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("forceUdate()")]),t._v(" method는 강제로 render를 시키기에 업데이트가 발생하게 된다.")])])]),t._v(" "),n("p",[t._v("class components lifecycle method")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("lifecycle")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 생명주기상 컴포넌트가 마운트 될때 실행된다.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compomemtDidUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state 변경, props의 변경, forceUdate()를 통해 render가 강제로 실행되었을떄 Update를 실행한다.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillUnMount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 컴포넌트가 DOM 상에서 사라질 때 (SPA 특성상 전체페이지가 바뀌는 것이 아니기에)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 반드시 component가 가상DOM에서 없어질떄 기존의 이벤트 루프 등을 없애야만 메모리에 누수가 없다.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);