(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{502:function(t,s,r){"use strict";r.r(s);var a=r(1),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"til-es6-node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#til-es6-node-js"}},[t._v("#")]),t._v(" TIL ES6+node.js")]),t._v(" "),s("h1",{attrs:{id:"오늘의-한-일"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#오늘의-한-일"}},[t._v("#")]),t._v(" 오늘의 한 일")]),t._v(" "),s("p",[t._v("오늘은 자바스크립트 특히 ES6에서 등장한 주요한 syntax를 활용하는 연습(?)을 하였다.")]),t._v(" "),s("h2",{attrs:{id:"arrow-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrow-function"}},[t._v("#")]),t._v(" Arrow Function")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/javascript/9_Arrow function.html"}},[t._v("Arrow function")])],1),t._v(" "),s("p",[t._v("함수를 표현하는 다른 방법 기존의 표현식이나 선언식이 아닌 ⇒ 화살표를 이용한여 함수를 표현한다.")]),t._v(" "),s("ul",[s("li",[t._v("함수를 간단히 나타낼 수 있다")]),t._v(" "),s("li",[t._v("return을 생략할 수 있다.")]),t._v(" "),s("li",[t._v("closure를 혁신적으로 만들 수 있다.")]),t._v(" "),s("li",[t._v("다른 함수와는 다르게 "),s("code",[t._v("this")]),t._v(" 가 존재하지 않는다.")])]),t._v(" "),s("h2",{attrs:{id:"구조-분해-할당-destructuring-assignment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#구조-분해-할당-destructuring-assignment"}},[t._v("#")]),t._v(" 구조 분해 할당 ( destructuring-assignment )")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/javascript/10_구조 분해 할당 (destructuring-assignment).html"}},[t._v("구조 분해 할당 (destructuring-assignment)")])],1),t._v(" "),s("p",[t._v("배열과 객체를 분해해서 할당한다 말 그대로다.")]),t._v(" "),s("ul",[s("li",[t._v("배열은 요소를 순서대로 좌측에 요소에 할당하는 개념이다.")]),t._v(" "),s("li",[t._v("객체는 key를 maping 하여 value를 가져와 할당하는데 이때의 기준은 좌측 변수이름과 일치하는 key의 value를 선택한다. 뭔가 복잡하면 위 링크에 예제를 보자.")]),t._v(" "),s("li",[t._v("객체의 구조 분해 할당에서 주의해야 할 것은 key를 maping한 값을 key와 일치하는 변수이름 말고 다른 변수에 할당 할 수 있다. 콜론(:)을 이용하여 "),s("code",[t._v("<serch key> : <reAssignment variable>")]),t._v(" 할당한다.")]),t._v(" "),s("li",[t._v("구조분해 할당은 함수에 인자에서도 가능하다.")])]),t._v(" "),s("h2",{attrs:{id:"node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[t._v("#")]),t._v(" node.js")]),t._v(" "),s("p",[t._v("javascript를 위한 런타임 환경이라고 생각하자.")]),t._v(" "),s("p",[t._v("javascript는 최초에는 web browser에서 동작하는 언어로서의 기능을 수행하였지만, node.js를 이용하여 node")]),t._v(" "),s("h3",{attrs:{id:"commonjs-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-api"}},[t._v("#")]),t._v(" CommonJS API")]),t._v(" "),s("p",[t._v("나중에 따로 한 번 다뤄야 겠지만 일단은 간략하게 이해하자면 javascript의 module화를 위한 도구라고 보면되겠다. 이로서 다른 사람이 만든 환경에서도 어플리케이션을 실행하는데에 문제가 없도록 만든다.")]),t._v(" "),s("p",[t._v("Core Modules")]),t._v(" "),s("p",[t._v("코어 모듈은 Node 소스코드의 "),s("code",[t._v("lib/")]),t._v(" 폴더에 들어 있다.")]),t._v(" "),s("p",[t._v("모듈을 require하면 항상 코어 모듈이 먼저 로드된다. 예를 들어, "),s("code",[t._v("require('http')")]),t._v("로 로드될 것 같은 파일이 있어도 Node에 들어 있는 HTTP 모듈이 반환된다.")]),t._v(" "),s("h2",{attrs:{id:"npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/noodeJS/npm.html"}},[t._v("npm")])],1),t._v(" "),s("p",[t._v("패키지 관리 도구")]),t._v(" "),s("p",[t._v("node.js 에서 설치 가능한 모듈들을 패키지화하여 모아둔 저장소 역활을 한다.")]),t._v(" "),s("p",[t._v("패키지를 검색하고 설치하고 배포할 수 있다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);